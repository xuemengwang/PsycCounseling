<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.meng.mapper.CazeMapper">
    <resultMap id="BaseResultMap" type="com.meng.model.Caze">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="fromid" property="fromid" jdbcType="INTEGER"/>
        <result column="replyid" property="replyid" jdbcType="INTEGER"/>
        <result column="field" property="field" jdbcType="TINYINT"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="time" property="time" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, fromid, replyid, field, title, time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.meng.model.CazeExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from caze
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from caze
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from caze
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.meng.model.CazeExample">
        delete from caze
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.meng.model.Caze">
        insert into caze (id, fromid, replyid,
                          field, title, time)
        values (#{id,jdbcType=INTEGER}, #{fromid,jdbcType=INTEGER}, #{replyid,jdbcType=INTEGER},
                #{field,jdbcType=TINYINT}, #{title,jdbcType=VARCHAR}, #{time,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.meng.model.Caze">
        insert into caze
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="fromid != null">
                fromid,
            </if>
            <if test="replyid != null">
                replyid,
            </if>
            <if test="field != null">
                field,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="time != null">
                time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="fromid != null">
                #{fromid,jdbcType=INTEGER},
            </if>
            <if test="replyid != null">
                #{replyid,jdbcType=INTEGER},
            </if>
            <if test="field != null">
                #{field,jdbcType=TINYINT},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                #{time,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.meng.model.CazeExample" resultType="java.lang.Integer">
        select count(*) from caze
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update caze
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.fromid != null">
                fromid = #{record.fromid,jdbcType=INTEGER},
            </if>
            <if test="record.replyid != null">
                replyid = #{record.replyid,jdbcType=INTEGER},
            </if>
            <if test="record.field != null">
                field = #{record.field,jdbcType=TINYINT},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.time != null">
                time = #{record.time,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update caze
        set id = #{record.id,jdbcType=INTEGER},
        fromid = #{record.fromid,jdbcType=INTEGER},
        replyid = #{record.replyid,jdbcType=INTEGER},
        field = #{record.field,jdbcType=TINYINT},
        title = #{record.title,jdbcType=VARCHAR},
        time = #{record.time,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.meng.model.Caze">
        update caze
        <set>
            <if test="fromid != null">
                fromid = #{fromid,jdbcType=INTEGER},
            </if>
            <if test="replyid != null">
                replyid = #{replyid,jdbcType=INTEGER},
            </if>
            <if test="field != null">
                field = #{field,jdbcType=TINYINT},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.meng.model.Caze">
        update caze
        set fromid  = #{fromid,jdbcType=INTEGER},
            replyid = #{replyid,jdbcType=INTEGER},
            field   = #{field,jdbcType=TINYINT},
            title   = #{title,jdbcType=VARCHAR},
            time    = #{time,jdbcType=BIGINT}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <!--//以下内容非mybatis逆向工程自动生成-->
    <select id="getMaxId" resultType="java.lang.Integer">
        select MAX(id)
        from caze;
    </select>


    <select id="selectCazeWithLimitAndOrderByTime" resultType="com.meng.model.Caze">
        select *
        from caze
        order by time desc
        limit #{limit}, #{offset};
    </select>

    <select id="selectCazeWithLimitAndOrderByTimeAndFromId" resultType="com.meng.model.Caze">
        select *
        from caze
        where fromid = #{fromid}
        order by time desc
        limit #{limit}, #{offset};
    </select>

    <select id="selectCazeWithLimitAndOrderByTimeAndReplyId" resultType="com.meng.model.Caze">
        select *
        from caze
        where replyid = #{replyid}
        order by time desc
        limit #{limit}, #{offset};
    </select>

    <select id="selectUncaredCazeWithLimitAndFieldAndOrderByTime" resultType="com.meng.model.Caze">
        select *
        from caze
        where field = #{field} and replyid is null
        order by time desc
        limit #{limit}, #{offset};
    </select>

</mapper>